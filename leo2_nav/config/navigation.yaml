bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odom
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node

controller_server:
  ros__parameters:
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.2
      movement_time_allowance: 10.0

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    #RPP
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      allow_reversing: true
      approach_velocity_scaling_dist: 0.6
      cost_scaling_dist: 0.6
      cost_scaling_gain: 1.0
      desired_linear_vel: 0.5
      inflation_cost_scaling_factor: 3.0
      lookahead_dist: 0.6
      lookahead_time: 1.5
      max_allowed_time_to_collision_up_to_carrot: 1.0
      max_angular_accel: 3.2
      max_lookahead_dist: 0.9
      max_robot_pose_search_dist: 1.4875
      min_approach_linear_velocity: 0.05
      min_lookahead_dist: 0.3
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      transform_tolerance: 0.1
      use_cost_regulated_linear_velocity_scaling: true
      use_interpolation: true
      use_regulated_linear_velocity_scaling: true #If false this lowers small distance oscillation but worsens path following accuracy
      use_rotate_to_heading: false
      use_velocity_scaled_lookahead_dist: false
    #MPPI parameters
    #FollowPath:
    #  plugin: "nav2_mppi_controller::MPPIController"
    #  time_steps: 56
    #  model_dt: 0.05
    #  batch_size: 2000
    #  vx_std: 0.2
    #  vy_std: 0.2
    #  wz_std: 0.4
    #  vx_max: 0.5
    #  vx_min: -0.35
    #  vy_max: 0.5
    #  wz_max: 1.9
    #  iteration_count: 1
    #  prune_distance: 1.7
    #  transform_tolerance: 0.1
    #  temperature: 0.3
    #  gamma: 0.015
    #  motion_model: "Ackermann"
    #  visualize: false
    #  TrajectoryVisualizer:
    #    trajectory_step: 5
    #    time_step: 3
    #  AckermannConstrains:
    #    min_turning_r: 0.2
    #  critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
    #  ConstraintCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 4.0
    #  GoalCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 5.0
    #    threshold_to_consider: 1.4
    #  GoalAngleCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 3.0
    #    threshold_to_consider: 0.5
    #  PreferForwardCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 5.0
    #    threshold_to_consider: 0.5
    #  ObstaclesCritic:
    #    enabled: true
    #    cost_power: 1
    #    repulsion_weight: 1.5
    #    critical_weight: 20.0
    #    consider_footprint: false
    #    collision_cost: 10000.0
    #    collision_margin_distance: 0.1
    #    near_goal_distance: 0.5
    #  PathAlignCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 14.0
    #    max_path_occupancy_ratio: 0.05
    #    trajectory_point_step: 3
    #    threshold_to_consider: 0.5
    #    offset_from_furthest: 20
    #    use_path_orientations: false
    #  PathFollowCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 5.0
    #    offset_from_furthest: 5
    #    threshold_to_consider: 1.4
    #  PathAngleCritic:
    #    enabled: true
    #    cost_power: 1
    #    cost_weight: 2.0
    #    offset_from_furthest: 4
    #    threshold_to_consider: 0.5
    #    max_angle_to_furthest: 1.0
    #    forward_preference: true
#
global_costmap:
  global_costmap:
    ros__parameters:
      height: 20
      width: 20
      origin_x: -10.0
      origin_y: -10.0
      resolution: 0.1
      rolling_window: false
      trinary_costmap: true
      unknown_cost_value: 255
      lethal_cost_threshold: 100
      track_unknown_space: false
      always_send_full_costmap: true
      use_maximum: false

      global_frame: map
      robot_base_frame: base_link
      transform_tolerance: 1.0
      footprint_padding: 0.01
      footprint: "[[0.21, 0.22], [0.21, -0.22], [-0.21, -0.22], [-0.21, 0.22]]"

      publish_frequency: 1.0
      update_frequency: 1.0

      use_sim_time: false

      plugins: ["obstacle_layer", "inflation_layer"]
      #plugins: ["static_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        footprint_clearing_enabled: true
        observation_sources: pointcloud
        pointcloud:
          topic: /oak/points
          data_type: PointCloud2
          expected_update_rate: 5.0
          min_obstacle_height: 0.05
          max_obstacle_height: 0.2
          inf_is_valid: false
          marking: true
          clearing: true
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 3.0
          obstacle_min_range: 0.0

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55
        

lifecycle_manager_navigation:
  ros__parameters:
    autostart: true
    node_names:
      - "planner_server"
      - "controller_server"
      - "bt_navigator"
      - "waypoint_follower"
    bond_timeout: 4.0
    attempt_respawn_reconnection: true
    bond_respawn_max_duration: 10.0

local_costmap:
  local_costmap:
    ros__parameters:
      height: 3
      width: 3
      resolution: 0.05
      rolling_window: true
      trinary_costmap: true
      unknown_cost_value: 255
      lethal_cost_threshold: 100
      track_unknown_space: false
      always_send_full_costmap: true
      use_maximum: false

      global_frame: odom
      robot_base_frame: base_link
      transform_tolerance: 1.0
      footprint_padding: 0.01
      footprint: "[[0.21, 0.22], [0.21, -0.22], [-0.21, -0.22], [-0.21, 0.22]]"

      update_frequency: 1.0
      publish_frequency: 1.0

      use_sim_time: false

      plugins: ["voxel_layer", "inflation_layer"]
      #plugins: ["static_layer", "inflation_layer"]

      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.05
        z_resolution: 0.05
        z_voxels: 4
        max_obstacle_height: 2.0
        mark_threshold: 1
        unknown_threshold: 3
        observation_sources: pointcloud
        pointcloud:
          topic: /oak/points
          data_type: PointCloud2
          expected_update_rate: 5.0
          min_obstacle_height: 0.05
          max_obstacle_height: 0.25
          inf_is_valid: false
          marking: true
          clearing: true
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 3.0
          obstacle_min_range: 0.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: true
        subscribe_to_updates: true
        transform_tolerance: 0.1

planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      downsample_costmap: false           # whether or not to downsample the map
      downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: true                 # allow traveling in unknown space
      max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_planning_time: 5.0              # max time in s for planner to plan, smooth
      motion_model_for_search: "REEDS_SHEPP"    # Hybrid-A* Dubin, Redds-Shepp
      angle_quantization_bins: 72         # Number of angle bins for search
      analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
      minimum_turning_radius: 1.0        # minimum turning radius in m of path / vehicle
      reverse_penalty: 50.0                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.0                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.2           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 3.0                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      smooth_path: False # was True                   # If true, does a simple and quick smoothing post-processing to the path

      smoother:
        max_iterations: 1000
        w_smooth: 0.1 # was 0.3
        w_data: 0.3 # was 0.2
        tolerance: 1e-10
        do_refinement: true

waypoint_follower:
  ros__parameters:
    stop_on_failure: true
    loop_rate: 20
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 1000